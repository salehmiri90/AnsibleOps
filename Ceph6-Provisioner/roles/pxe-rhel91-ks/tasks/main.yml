---

- name: Create Kickstart file for OSD Servers
  copy:
          force: yes
          dest: /home/stageiso/rhel91/{{ item.hostName }}.cfg
          mode: '0777'
          content: |
                  %pre
                  !/bin/sh
                  OSDISK=""
                  for dev in sda sdb sdc sdd sde sdf sdg
                  do
                          siz=`lsblk -b /dev/$dev | awk '{print $4}' | sed -n '2 p'`
                          if [ $siz -lt 751619276800 ]
                          then
                                  OSDISK=$dev
                          else
                                  OSDISK=""
                          fi
                  done
                  cat << EOF > /tmp/part-include
                  zerombr
                  clearpart --all
                  ignoredisk --only-use=$OSDISK
                  part pv.01 --fstype="lvmpv" --ondisk=$OSDISK --size={{ pv01_size }}
                  part pv.02 --fstype="lvmpv" --ondisk=$OSDISK --size={{ pv02_size }}
                  part /boot/efi --fstype="efi" --ondisk=$OSDISK --size=600 --fsoptions="umask=0077,shortname=winnt"
                  part /boot --fstype="xfs" --ondisk=$OSDISK --size=1024
                  volgroup rhel --pesize=4096 pv.01
                  volgroup vardata --pesize=4096 pv.02
                  logvol / --vgname=rhel --name=root --fstype=xfs --size={{ root_size }}
                  logvol swap --vgname=rhel --name=swap --fstype=swap --size=8192
                  logvol /home --vgname=rhel --name=home --fstype=xfs --size={{ home_size }}
                  logvol /var --vgname=vardata --name=vardata --fstype=xfs --size={{ var_size }}
                  network --device=bond0 --bondslaves={{ item.bond0slaves1 }},{{ item.bond0slaves2 }} --bondopts=mode=802.3ad --hostname={{ item.hostName}} --bootproto=static --ip={{ item.bond0_ip }} --netmask={{ global_netmask }} --gateway={{ global_gw }} --nameserver={{ global_dns1 }},{{ global_dns2 }} --onboot=yes --activate
                  skipx
                  firstboot --enable
                  selinux --enforcing
                  firewall --enabled --ssh
                  EOF
                  %end
                  # ----------------- end of pre section --------------------------
                  keyboard us
                  lang en_US
                  timezone Asia/City
                  rootpw --plaintext 'SalehMiri12345'
                  user --name=ansible --password='SalehMiri12345'
                  text
                  url --url="http://saleh.miri/rhel91"
                  bootloader --location=mbr --append="rhgb nofb quiet splash=quiet crashkernel=auto"
                  %include /tmp/part-include
                  reboot
                  # --------------- start of packages ------------------------------
                  %packages
                  @^minimal-environment
                  @container-management
                  @security-tools
                  telnet
                  perl
                  vim
                  chrony
                  wget
                  tzdata
                  traceroute
                  %end

  with_items:
          - "{{ hosts }}"


